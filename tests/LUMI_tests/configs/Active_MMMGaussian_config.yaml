sampler:
  type: SpatiallyAdaptiveSparseGrids
  bounds: [[0,1], [0,1], [0,1]]
  parameters: ['x0', 'x1', 'x2']
  initial_level: 1
  check_sampler:
    type: SobelSequence
    num_samples: 1e6

executor:
  type: DaskExecutorActive
  base_run_dir: /scratch/project_462000451/enchanted_test_out/active_MMMG_6_UQplots # Because the runner only executes a python function I do not need a run_base_dir
  # runner_return_path: /scratch/project_462000451/gene_out/enchanted_test_out/MMMG/runner_return
  runner_return_headder: 'x0,x1,x2,MMMG'
  max_cycles: 5

  static_executor:
    type: DaskExecutorSimulation
    runner:
      type: MMMGrunner
      num_dim: 3 #Necessary
      bounds: [[0,1], [0,1], [0,1]] # Necessary
      random_gaussians:
        num_gaussians: 5 #Necessary
        # mean_bounds: [[0,1], [0,1], [0,1]] # Defaults to bounds
        # std_bounds: [[0,1], [0,1], [0,1]] # Defaults to bounds
        seed: 42 # Defaults to None
      # specify_gaussians:
      #   means: [[0.25,0.25,0.25], [0.75,0.75,0.75]] #Necessary
      #   stds: [[0.5,0.5,0.5],[0.5,0.5,0.5]] #Necessary  
    
    worker_args: # to be specified for the SLURMCluster in DASK
      account: "project_462000451"
      queue: "small"
      cores: 1
      memory: "2GB"
      #Set the walltime for entire cluster to be able to run everything set in the sampler, taking into account the number of workers. 
      walltime: "00:40:00"
      interface: "nmn0"
      # The job script prologue is ran on every worker at start up
      job_script_prologue: # this is possibly dependent on which code you want
        - 'export PATH="/project/project_462000451/enchanted_container_lumi3/bin:$PATH"'
        # Change this for your own personal enchanted surrogates clone
        - 'cd /users/danieljordan/enchanted-surrogates2/'
        # This command gives the worker access to the python within our container. 
        - 'export PYTHONPATH=$PYTHONPATH:/users/danieljordan/enchanted-surrogates2/src' # NB: to use the enchanted-surrogate library
      # These are appended to the sbatch that requestes the resources for each worker.
      
    n_jobs: 5